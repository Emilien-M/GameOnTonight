@using GameOnTonight.Services
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <nav class="mobile-tab-bar">
            <NavLink class="tab-item" href="" Match="NavLinkMatch.All">
                <i class="tab-icon filter-icon"></i>
                <span>Filtrer</span>
            </NavLink>
            <NavLink class="tab-item" href="library">
                <i class="tab-icon library-icon"></i>
                <span>Ludothèque</span>
            </NavLink>
            <NavLink class="tab-item" href="history">
                <i class="tab-icon history-icon"></i>
                <span>Historique</span>
            </NavLink>
            <NavLink class="tab-item" href="profile">
                <i class="tab-icon profile-icon"></i>
                <span>Profil</span>
            </NavLink>
        </nav>
    </Authorized>
    <NotAuthorized>
        <nav class="mobile-tab-bar">
            <NavLink class="tab-item" href="login">
                <i class="tab-icon login-icon"></i>
                <span>Connexion</span>
            </NavLink>
            <NavLink class="tab-item" href="register">
                <i class="tab-icon register-icon"></i>
                <span>Inscription</span>
            </NavLink>
        </nav>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login", true);
    }
}